{"title":"為什麼選擇ReactJS？","date":"2019-11-10T09:34:02.000Z","url":"/2019/11/10/為什麼選擇ReactJS？/","tags":["React"],"content":"React 特色React（有時叫React.js或ReactJS）是一個為資料提供彩現為HTML視圖的開源JavaScript 庫。React視圖通常採用包含以自訂HTML標記規定的其他組件的組件彩現。React為程式設計師提供了一種子組件不能直接影響外層組件（”data flows down”）的模型，資料改變時對HTML文件的有效更新，和現代單頁應用中組件之間乾淨的分離。 - 維基百科Facebook 在2013年推出的一種開源前端框架。為了解決前端不斷複雜化，導致的效能瓶頸和維護成本。優點：元件化，使程式更易於維護執行效能高單向數據流同構兼容性強跨平台性虛擬DOM（Virtual DOM）React核心思想是從元件出發，他會先在程式端放入一段對應到真實DOM的物件，用來管理所有的資料與邏輯，當元件因為資料而更新的時候，React會重新製作一個新的虛擬DOM樹，然後快速地跟舊的虛擬DOM進行比對，之後將有更新的部分更新到真實DOM上。元件虛擬DOM的寫法帶來了有別於以往HTML, CSS的開發習慣，全部寫在一起，而是透過物件導向的方式，讓每個開發者可以專心地針對每個元件撰寫功能和邏輯。單向資料流因為React樹狀化元件的關係，元件和元件之間緊密相連，父元件僅能通過props的方式傳遞至子元件，子元件則沒辦法去修改props裡面的資料。所以通常需要搭配Flux或者Redux。"},{"title":"182-Duplicate-Emails","date":"2019-07-20T17:19:31.000Z","url":"/2019/07/21/182-Duplicate-Emails/","tags":["LeetCode","MySQL","Database"],"content":"RulesWrite a SQL query to find all duplicate emails in a table named Person.For example, your query should return the following for the above table:SQL SchemaQueryReference182. Duplicate Emails"},{"title":"620-Not-Boring-Movies","date":"2019-07-20T17:02:44.000Z","url":"/2019/07/21/620-Not-Boring-Movies/","tags":["LeetCode","MySQL","Database"],"content":"X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies’ ratings and descriptions.RulesPlease write a SQL query to output movies with an odd numbered ID and a description that is not ‘boring’. Order the result by rating.SQL SchemaFor example, table cinema:For the example above, the output should be:QueryReference620. Not Boring Movies"},{"title":"1108-Defanging-an-IP-Address","date":"2019-07-20T09:35:45.000Z","url":"/2019/07/20/1108-Defanging-an-IP-Address/","tags":["PHP","LeetCode"],"content":"Given a valid (IPv4) IP address, return a defanged version of that IP address.RulesA defanged IP address replaces every period &quot;.&quot; with &quot;[.]&quot;.Code複雜度為 O(1)。Reference1108. Defanging an IP AddressGitHub"},{"title":"595-Big-Countries","date":"2019-07-19T18:16:29.000Z","url":"/2019/07/20/595-Big-Countries/","tags":["LeetCode","MySQL","Database"],"content":"Write a SQL solution to output big countries’ name, population and area.RulesA country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.SQL SchemaQueryReference595. Big Countries"},{"title":"771-Jewels and Stones","date":"2019-07-19T17:42:05.000Z","url":"/2019/07/20/771-Jewels-and-Stones/","tags":["PHP","LeetCode"],"content":"You’re given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.RulesNoteS and J will consist of letters and have length at most 50.The characters in J are distinct.Code複雜度為 O(n)。Reference771. Jewels and StonesGitHub"},{"title":"使用PHP模擬蒙提霍爾問題","date":"2019-07-18T10:38:05.000Z","url":"/2019/07/18/使用PHP模擬蒙提霍爾問題/","tags":["PHP"],"content":"蒙提霍爾問題，亦稱為蒙特霍問題或三門問題（英文：Monty Hall problem），是一個源自博弈論的數學遊戲問題。問題的名字來自該節目的主持人蒙蒂·霍爾。Rules這個遊戲的玩法是：參賽者會看見三扇關閉了的門，其中一扇的後面有一輛汽車或者是獎品，選中後面有車的那扇門就可以贏得該汽車或獎品，而另外兩扇門後面則各藏有一隻山羊。當參賽者選定了一扇門，但未去開啟它的時候，知道門後情形的節目主持人會開啟剩下兩扇門的其中一扇，露出其中一隻山羊。主持人其後會問參賽者要不要換另一扇仍然關上的門。問題是：換另一扇門會否增加參賽者贏得汽車的機率？如果嚴格按照上述的條件的話，答案是會。換門的話，贏得汽車的機率是2/3。Code建立一個類別 ThreeDoor，宣告玩家數 10000，並且實作Function run。宣告成功與失敗的變數執行迴圈，讓玩家選擇三門中的一門。依照遊戲規則，如果玩家選擇的是汽車，那麼主持人就隨意開啟一扇門給他，如果玩家開啟的不是汽車則主持人必須開啟另外一扇不是汽車的門給他。開始計算玩家換門的話的成功與失敗機率Conclusion程式執行結果Reference使用PHP模擬蒙提霍爾問題（GitHub）蒙提霍爾問題"}]