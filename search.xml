<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>595-Big-Countries</title>
      <link href="/2019/07/20/595-Big-Countries/"/>
      <url>/2019/07/20/595-Big-Countries/</url>
      
        <content type="html"><![CDATA[<p>Write a SQL solution to output big countries’ name, population and area.</p><h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><p>A country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.<br>    +————–+————-+————–+<br>    | name         | population  | area         |<br>    +————–+————-+————–+<br>    | Afghanistan  | 25500100    | 652230       |<br>    | Algeria      | 37100000    | 2381741      |<br>    +————–+————-+————–+</p><h2 id="SQL-Schema"><a href="#SQL-Schema" class="headerlink" title="SQL Schema"></a>SQL Schema</h2><pre><code>Create table If Not Exists World (name varchar(255), continent varchar(255), area int, population int, gdp int)Truncate table Worldinsert into World (name, continent, area, population, gdp) values (&#39;Afghanistan&#39;, &#39;Asia&#39;, &#39;652230&#39;, &#39;25500100&#39;, &#39;20343000000&#39;)insert into World (name, continent, area, population, gdp) values (&#39;Albania&#39;, &#39;Europe&#39;, &#39;28748&#39;, &#39;2831741&#39;, &#39;12960000000&#39;)insert into World (name, continent, area, population, gdp) values (&#39;Algeria&#39;, &#39;Africa&#39;, &#39;2381741&#39;, &#39;37100000&#39;, &#39;188681000000&#39;)insert into World (name, continent, area, population, gdp) values (&#39;Andorra&#39;, &#39;Europe&#39;, &#39;468&#39;, &#39;78115&#39;, &#39;3712000000&#39;)insert into World (name, continent, area, population, gdp) values (&#39;Angola&#39;, &#39;Africa&#39;, &#39;1246700&#39;, &#39;20609294&#39;, &#39;100990000000&#39;)</code></pre><h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><pre><code># Write your MySQL query statement belowSELECT name, population, area FROM WorldWHERE population &gt; &#39;25000000&#39;OR area &gt; &#39;3000000&#39;</code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://leetcode.com/problems/big-countries" title="595. Big Countries" target="_blank" rel="noopener">595. Big Countries</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Database </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>771-Jewels and Stones</title>
      <link href="/2019/07/20/771-Jewels-and-Stones/"/>
      <url>/2019/07/20/771-Jewels-and-Stones/</url>
      
        <content type="html"><![CDATA[<p>You’re given strings J representing the types of stones that are jewels, and S representing the stones you have.  Each character in S is a type of stone you have.  You want to know how many of the stones you have are also jewels.</p><p>The letters in J are guaranteed distinct, and all characters in J and S are letters. Letters are case sensitive, so “a” is considered a different type of stone from “A”.</p><h2 id="Rule"><a href="#Rule" class="headerlink" title="Rule"></a>Rule</h2><pre><code>Input: J = &quot;aA&quot;, S = &quot;aAAbbbb&quot;Output: 3Input: J = &quot;z&quot;, S = &quot;ZZ&quot;Output: 0</code></pre><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p><code>S</code> and <code>J</code> will consist of letters and have length at most 50.<br>The characters in <code>J</code> are distinct.</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><pre><code>class Solution {    /**    * @param String $J    * @param String $S    * @return Integer    */    function numJewelsInStones($J, $S) {        $count = 0;        $S = str_split($S);        $data = array_count_values($S);        for($i=0; $i&lt;=strlen($J); $i++) {            $count += $data[$J[$i]];        }        return $count;    }}</code></pre><p>複雜度為 <strong>O(n)</strong>。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://leetcode.com/problems/jewels-and-stones" title="771. Jewels and Stones" target="_blank" rel="noopener">771. Jewels and Stones</a><br><a href="https://github.com/BlakeFunTeis/leetcode-php/blob/master/771-Jewels_and_Stones.php" title="GitHub" target="_blank" rel="noopener">GitHub</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PHP模擬蒙提霍爾問題</title>
      <link href="/2019/07/18/%E4%BD%BF%E7%94%A8PHP%E6%A8%A1%E6%93%AC%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C/"/>
      <url>/2019/07/18/%E4%BD%BF%E7%94%A8PHP%E6%A8%A1%E6%93%AC%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C/</url>
      
        <content type="html"><![CDATA[<p><strong>蒙提霍爾問題</strong>，亦稱為<strong>蒙特霍問題</strong>或<strong>三門問題</strong>（英文：Monty Hall problem），是一個源自博弈論的數學遊戲問題。<br>問題的名字來自該節目的主持人<a href="https://zh.wikipedia.org/wiki/%E8%92%99%E8%92%82%C2%B7%E9%9C%8D%E5%B0%94" title="蒙蒂·霍爾" target="_blank" rel="noopener">蒙蒂·霍爾</a>。</p><h2 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h2><p>這個遊戲的玩法是：參賽者會看見三扇關閉了的門，其中一扇的後面有一輛汽車或者是獎品，選中後面有車的那扇門就可以贏得該汽車或獎品，而另外兩扇門後面則各藏有一隻山羊。</p><p>當參賽者選定了一扇門，但未去開啟它的時候，知道門後情形的節目主持人會開啟剩下兩扇門的其中一扇，露出其中一隻山羊。主持人其後會問參賽者要不要換另一扇仍然關上的門。</p><p>問題是：換另一扇門會否增加參賽者贏得汽車的機率？如果嚴格按照上述的條件的話，答案是<strong>會</strong>。換門的話，贏得汽車的機率是2/3。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>建立一個類別 <strong>ThreeDoor</strong>，宣告玩家數 <strong>10000</strong>，並且實作Function <strong>run</strong>。</p><pre><code>class ThreeDoor{        private $max_player = 100000;        public function run        {            //TODO: 實作模擬蒙提霍爾問題        }}</code></pre><p>宣告成功與失敗的變數</p><pre><code>public function run{    $yes = 0;    $no = 0;}</code></pre><p>執行迴圈，讓玩家選擇三門中的一門。<br><br>依照遊戲規則，如果玩家選擇的是汽車，那麼主持人就隨意開啟一扇門給他，如果玩家開啟的不是汽車則主持人<strong>必須開啟另外一扇不是汽車的門</strong>給他。</p><pre><code>// 答案    $answer = rand(1, 3);// 選擇$choice = rand(1, 3);// 排除選擇後的選擇$other = [1, 2, 3];unset($other[$choice - 1]);// 如果 選擇等於答案 那麼就任意開一扇門給他if ($choice === $answer) {    $point = array_rand($other) + 1;} else {       //否則 就排除答案的門 開另一扇門給他    $temp = $other;    unset($temp[$answer - 1]);    $temp = array_values($temp);    $point = $temp[0];}</code></pre><p>開始計算玩家換門的話的成功與失敗機率</p><pre><code>// 取得剩餘的那道門，玩家換的話的門$temp = $other;unset($temp[$point - 1]);$temp = array_values($temp);$player_change2 = $temp[0];if ($answer === $player_change2) {    $yes += 1;} elseif ($answer === $choice) {    $no += 1;}echo &quot;換的話，中獎的機率:&quot; . $yes / $this-&gt;max_player . &quot;&lt;br&gt;&quot;;echo &quot;不換的話，中獎的機率:&quot; . $no / $this-&gt;max_player . &quot;&lt;br&gt;&quot;;</code></pre><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>程式執行結果</p><pre><code>換的話，中獎的機率:0.66475不換的話，中獎的機率:0.33525</code></pre><p>複雜度為 <strong>O(10000)</strong>。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://github.com/BlakeFunTeis/ThreeDoor-PHP/" title="使用PHP模擬蒙提霍爾問題（GitHub" target="_blank" rel="noopener">使用PHP模擬蒙提霍爾問題（GitHub）</a><br><a href="https://zh.wikipedia.org/wiki/%E8%92%99%E6%8F%90%E9%9C%8D%E7%88%BE%E5%95%8F%E9%A1%8C" title="蒙提霍爾問題" target="_blank" rel="noopener">蒙提霍爾問題</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
